package common;

import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import com.fasterxml.jackson.databind.ObjectMapper;

public class Utils {
	
    private static final String FILE_PATH = "dataStore.json";
    private static final ObjectMapper objectMapper = new ObjectMapper();

    // Store single value
    public static void set(String key, Object value) {
        Map<String, Object> data = load();
        data.put(key, value);
        save(data);
    }

    // Retrieve value (Handles both String and List)
    public static <T> T get(String key, Class<T> type) {
        return type.cast(load().get(key));
    }

    // Load JSON
    private static Map<String, Object> load() {
        try {
            File file = new File(FILE_PATH);
            return file.exists() ? objectMapper.readValue(file, Map.class) : new HashMap<>();
        } catch (IOException e) {
            return new HashMap<>();
        }
    }

    // Save JSON
    private static void save(Map<String, Object> data) {
        try {
            objectMapper.writeValue(new File(FILE_PATH), data);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

}
