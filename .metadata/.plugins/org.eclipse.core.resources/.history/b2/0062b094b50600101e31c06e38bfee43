<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="Ela" failures="0" tests="6" name="testRunner.TestRunner" time="11.012" errors="3" timestamp="2025-03-21T19:29:46 CDT" skipped="0">
  <testcase classname="testRunner.TestRunner" name="runScenario" time="0.528"/>
  <testcase classname="testRunner.TestRunner" name="runScenario" time="0.048">
    <error message="Specification to merge with cannot be null" type="java.lang.IllegalArgumentException">
      <![CDATA[java.lang.IllegalArgumentException: Specification to merge with cannot be null
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:53)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at io.restassured.internal.SpecificationMerger.merge(SpecificationMerger.groovy:94)
at io.restassured.internal.SpecificationMerger$merge.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.internal.SpecificationMerger$merge.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.spec(RequestSpecificationImpl.groovy:944)
at requestBuilder.ClassRequest.classPost(ClassRequest.java:112)
at stepDefinitions.Class_Step.the_admin_sends_https_post_request_for_valid_data_scenarios_as_input_and_for_class(Class_Step.java:33)
at ✽.The Admin sends HTTPS POST request for valid data scenarios as input "class" and "TC_01_class" for Class(file:///C:/Users/ems11/Desktop/RestAssuredHackathon/Team04_RestfulRebels/src/test/resources/features/05Class.feature:10)
]]>
    </error>
  </testcase> <!-- runScenario -->
  <testcase classname="testRunner.TestRunner" name="runScenario" time="9.430">
    <error message="Schema to use cannot be null" type="java.lang.IllegalArgumentException">
      <![CDATA[java.lang.IllegalArgumentException: Schema to use cannot be null
at io.restassured.module.jsv.JsonSchemaValidator.validateSchemaIsNotNull(JsonSchemaValidator.java:270)
at io.restassured.module.jsv.JsonSchemaValidator.access$300(JsonSchemaValidator.java:75)
at io.restassured.module.jsv.JsonSchemaValidator$JsonSchemaValidatorFactory.create(JsonSchemaValidator.java:281)
at io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchema(JsonSchemaValidator.java:166)
at io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchemaInClasspath(JsonSchemaValidator.java:117)
at requestBuilder.LoginRequest.validateSchemaLoginPost(LoginRequest.java:113)
at stepDefinitions.Login_Step.the_admin_get_valid_credentials_response_code_and_message_as_and(Login_Step.java:44)
at ✽.The Admin get valid credentials response code and message as "login" and "TC_01_login"(file:///C:/Users/ems11/Desktop/RestAssuredHackathon/Team04_RestfulRebels/src/test/resources/features/01Login.feature:8)
]]>
    </error>
  </testcase> <!-- runScenario -->
  <testcase classname="testRunner.TestRunner" name="runScenario" time="0.108">
    <error message="The step &#039;The Admin sends HTTPS POST request for valid data scenarios as input &quot;program&quot; and &quot;TC_01_user&quot; for Program&#039; and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When(&quot;The Admin sends HTTPS POST request for valid data scenarios as input {string} and {string} for Program&quot;)
public void the_admin_sends_https_post_request_for_valid_data_scenarios_as_input_and_for_program(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&quot;The Admin get valid data response code and message as {string} and {string} for Program&quot;)
public void the_admin_get_valid_data_response_code_and_message_as_and_for_program(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
" type="io.cucumber.testng.UndefinedStepException">
      <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'The Admin sends HTTPS POST request for valid data scenarios as input "program" and "TC_01_user" for Program' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("The Admin sends HTTPS POST request for valid data scenarios as input {string} and {string} for Program")
public void the_admin_sends_https_post_request_for_valid_data_scenarios_as_input_and_for_program(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The Admin get valid data response code and message as {string} and {string} for Program")
public void the_admin_get_valid_data_response_code_and_message_as_and_for_program(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:136)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:132)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
  </testcase> <!-- runScenario -->
  <testcase classname="testRunner.TestRunner" name="runScenario" time="0.448"/>
  <testcase classname="testRunner.TestRunner" name="runScenario" time="0.450"/>
</testsuite> <!-- testRunner.TestRunner -->
