<!DOCTYPE html>

<html>
  <head>
  <meta charset='utf-8'>
  <title>TestNG reports</title>

    <link type="text/css" href="testng-reports1.css" rel="stylesheet" id="ultra" />
    <link type="text/css" href="testng-reports.css" rel="stylesheet" id="retro" disabled="false"/>
    <script type="text/javascript" src="jquery-3.6.0.min.js"></script>
    <script type="text/javascript" src="testng-reports.js"></script>
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>
    <script type='text/javascript'>
      google.load('visualization', '1', {packages:['table']});
      google.setOnLoadCallback(drawTable);
      var suiteTableInitFunctions = new Array();
      var suiteTableData = new Array();
    </script>
    <!--
      <script type="text/javascript" src="jquery-ui/js/jquery-ui-1.8.16.custom.min.js"></script>
     -->
  </head>

  <body>    <div class="top-banner-root">
      <span class="top-banner-title-font">Test results</span>
      <button id="button" class="button">Switch Retro Theme</button> <!-- button -->
      <br/>
      <span class="top-banner-font-1">1 suite, 3 failed tests</span>
    </div> <!-- top-banner-root -->
    <div class="navigator-root">
      <div class="navigator-suite-header">
        <span>All suites</span>
        <a href="#" title="Collapse/expand all the suites" class="collapse-all-link">
          <img src="collapseall.gif" class="collapse-all-icon">
          </img> <!-- collapse-all-icon -->
        </a> <!-- collapse-all-link -->
      </div> <!-- navigator-suite-header -->
      <div class="suite">
        <div class="rounded-window">
          <div class="suite-header light-rounded-window-top">
            <a href="#" panel-name="suite-Default_suite" class="navigator-link">
              <span class="suite-name border-failed">Default suite</span>
            </a> <!-- navigator-link -->
          </div> <!-- suite-header light-rounded-window-top -->
          <div class="navigator-suite-content">
            <div class="suite-section-title">
              <span>Info</span>
            </div> <!-- suite-section-title -->
            <div class="suite-section-content">
              <ul>
                <li>
                  <a href="#" panel-name="test-xml-Default_suite" class="navigator-link ">
                    <span>C:\Users\ems11\AppData\Local\Temp\testng-eclipse--1057224637\testng-customsuite.xml</span>
                  </a> <!-- navigator-link  -->
                </li>
                <li>
                  <a href="#" panel-name="testlist-Default_suite" class="navigator-link ">
                    <span class="test-stats">1 test</span>
                  </a> <!-- navigator-link  -->
                </li>
                <li>
                  <a href="#" panel-name="group-Default_suite" class="navigator-link ">
                    <span>1 group</span>
                  </a> <!-- navigator-link  -->
                </li>
                <li>
                  <a href="#" panel-name="times-Default_suite" class="navigator-link ">
                    <span>Times</span>
                  </a> <!-- navigator-link  -->
                </li>
                <li>
                  <a href="#" panel-name="reporter-Default_suite" class="navigator-link ">
                    <span>Reporter output</span>
                  </a> <!-- navigator-link  -->
                </li>
                <li>
                  <a href="#" panel-name="ignored-methods-Default_suite" class="navigator-link ">
                    <span>Ignored methods</span>
                  </a> <!-- navigator-link  -->
                </li>
                <li>
                  <a href="#" panel-name="chronological-Default_suite" class="navigator-link ">
                    <span>Chronological view</span>
                  </a> <!-- navigator-link  -->
                </li>
              </ul>
            </div> <!-- suite-section-content -->
            <div class="result-section">
              <div class="suite-section-title">
                <span>Results</span>
              </div> <!-- suite-section-title -->
              <div class="suite-section-content">
                <ul>
                  <li>
                    <span class="method-stats">6 methods, 3 failed,   3 passed</span>
                  </li>
                  <li>
                    <span class="method-list-title failed">Failed methods</span>
                    <span class="show-or-hide-methods failed">
                      <a href="#" panel-name="suite-Default_suite" class="hide-methods failed suite-Default_suite"> (hide)</a> <!-- hide-methods failed suite-Default_suite -->
                      <a href="#" panel-name="suite-Default_suite" class="show-methods failed suite-Default_suite"> (show)</a> <!-- show-methods failed suite-Default_suite -->
                    </span>
                    <div class="method-list-content failed suite-Default_suite">
                      <span>
                        <img src="failed.png" width="3%"/>
                        <a href="#" panel-name="suite-Default_suite" title="testRunner.TestRunner" class="method navigator-link" hash-for-method="runScenario(&quot;Creating Class with different values from Test data&quot;, &quot;Class Module Functionality&quot;)">runScenario("Creating Class with different values from Test data", "Class Module Functionality")</a> <!-- method navigator-link -->
                      </span>
                      <br/>
                      <span>
                        <img src="failed.png" width="3%"/>
                        <a href="#" panel-name="suite-Default_suite" title="testRunner.TestRunner" class="method navigator-link" hash-for-method="runScenario(&quot;Login functionality with different values from Tese data&quot;, &quot;Login/Logout Functionality&quot;)">runScenario("Login functionality with different values from Tese data", "Login/Logout Functionality")</a> <!-- method navigator-link -->
                      </span>
                      <br/>
                      <span>
                        <img src="failed.png" width="3%"/>
                        <a href="#" panel-name="suite-Default_suite" title="testRunner.TestRunner" class="method navigator-link" hash-for-method="runScenario(&quot;Creating user with different values from Test data&quot;, &quot;Program Module Functionality&quot;)">runScenario("Creating user with different values from Test data", "Program Module Functionality")</a> <!-- method navigator-link -->
                      </span>
                      <br/>
                    </div> <!-- method-list-content failed suite-Default_suite -->
                  </li>
                  <li>
                    <span class="method-list-title passed">Passed methods</span>
                    <span class="show-or-hide-methods passed">
                      <a href="#" panel-name="suite-Default_suite" class="hide-methods passed suite-Default_suite"> (hide)</a> <!-- hide-methods passed suite-Default_suite -->
                      <a href="#" panel-name="suite-Default_suite" class="show-methods passed suite-Default_suite"> (show)</a> <!-- show-methods passed suite-Default_suite -->
                    </span>
                    <div class="method-list-content passed suite-Default_suite">
                      <span>
                        <img src="passed.png" width="3%"/>
                        <a href="#" panel-name="suite-Default_suite" title="testRunner.TestRunner" class="method navigator-link" hash-for-method="runScenario(&quot;Login functionality with different values from Tese data&quot;, &quot;Login/Logout Functionality&quot;)">runScenario("Login functionality with different values from Tese data", "Login/Logout Functionality")</a> <!-- method navigator-link -->
                      </span>
                      <br/>
                      <span>
                        <img src="passed.png" width="3%"/>
                        <a href="#" panel-name="suite-Default_suite" title="testRunner.TestRunner" class="method navigator-link" hash-for-method="runScenario(&quot;Login functionality with different values from Tese data&quot;, &quot;Login/Logout Functionality&quot;)">runScenario("Login functionality with different values from Tese data", "Login/Logout Functionality")</a> <!-- method navigator-link -->
                      </span>
                      <br/>
                      <span>
                        <img src="passed.png" width="3%"/>
                        <a href="#" panel-name="suite-Default_suite" title="testRunner.TestRunner" class="method navigator-link" hash-for-method="runScenario(&quot;Login functionality with different values from Tese data&quot;, &quot;Login/Logout Functionality&quot;)">runScenario("Login functionality with different values from Tese data", "Login/Logout Functionality")</a> <!-- method navigator-link -->
                      </span>
                      <br/>
                    </div> <!-- method-list-content passed suite-Default_suite -->
                  </li>
                </ul>
              </div> <!-- suite-section-content -->
            </div> <!-- result-section -->
          </div> <!-- navigator-suite-content -->
        </div> <!-- rounded-window -->
      </div> <!-- suite -->
    </div> <!-- navigator-root -->
    <div class="wrapper">
      <div class="main-panel-root">
        <div panel-name="suite-Default_suite" class="panel Default_suite">
          <div class="suite-Default_suite-class-failed">
            <div class="main-panel-header rounded-window-top">
              <img src="failed.png"/>
              <span class="class-name">testRunner.TestRunner</span>
            </div> <!-- main-panel-header rounded-window-top -->
            <div class="main-panel-content rounded-window-bottom">
              <div class="method">
                <div class="method-content">
                  <a name="runScenario(&quot;Creating Class with different values from Test data&quot;, &quot;Class Module Functionality&quot;)">
                  </a> <!-- runScenario("Creating Class with different values from Test data", "Class Module Functionality") -->
                  <span class="method-name">runScenario</span>
                  <span class="parameters">("Creating Class with different values from Test data","Class Module Functionality")</span>
                  <div class="stack-trace">java.lang.IllegalArgumentException: Specification to merge with cannot be null
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)
	at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:53)
	at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
	at io.restassured.internal.SpecificationMerger.merge(SpecificationMerger.groovy:94)
	at io.restassured.internal.SpecificationMerger$merge.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
	at io.restassured.internal.SpecificationMerger$merge.call(Unknown Source)
	at io.restassured.internal.RequestSpecificationImpl.spec(RequestSpecificationImpl.groovy:944)
	at requestBuilder.ClassRequest.classPost(ClassRequest.java:112)
	at stepDefinitions.Class_Step.the_admin_sends_https_post_request_for_valid_data_scenarios_as_input_and_for_class(Class_Step.java:33)
	at ✽.The Admin sends HTTPS POST request for valid data scenarios as input &quot;class&quot; and &quot;TC_01_class&quot; for Class(file:///C:/Users/ems11/Desktop/RestAssuredHackathon/Team04_RestfulRebels/src/test/resources/features/05Class.feature:10)

</div> <!-- stack-trace -->
                  <em>
(Runs Cucumber Scenarios)                  </em>
                </div> <!-- method-content -->
              </div> <!-- method -->
              <div class="method">
                <div class="method-content">
                  <a name="runScenario(&quot;Login functionality with different values from Tese data&quot;, &quot;Login/Logout Functionality&quot;)">
                  </a> <!-- runScenario("Login functionality with different values from Tese data", "Login/Logout Functionality") -->
                  <span class="method-name">runScenario</span>
                  <span class="parameters">("Login functionality with different values from Tese data","Login/Logout Functionality")</span>
                  <div class="stack-trace">java.lang.IllegalArgumentException: Schema to use cannot be null
	at io.restassured.module.jsv.JsonSchemaValidator.validateSchemaIsNotNull(JsonSchemaValidator.java:270)
	at io.restassured.module.jsv.JsonSchemaValidator.access$300(JsonSchemaValidator.java:75)
	at io.restassured.module.jsv.JsonSchemaValidator$JsonSchemaValidatorFactory.create(JsonSchemaValidator.java:281)
	at io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchema(JsonSchemaValidator.java:166)
	at io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchemaInClasspath(JsonSchemaValidator.java:117)
	at requestBuilder.LoginRequest.validateSchemaLoginPost(LoginRequest.java:113)
	at stepDefinitions.Login_Step.the_admin_get_valid_credentials_response_code_and_message_as_and(Login_Step.java:44)
	at ✽.The Admin get valid credentials response code and message as &quot;login&quot; and &quot;TC_01_login&quot;(file:///C:/Users/ems11/Desktop/RestAssuredHackathon/Team04_RestfulRebels/src/test/resources/features/01Login.feature:8)

</div> <!-- stack-trace -->
                  <em>
(Runs Cucumber Scenarios)                  </em>
                </div> <!-- method-content -->
              </div> <!-- method -->
              <div class="method">
                <div class="method-content">
                  <a name="runScenario(&quot;Creating user with different values from Test data&quot;, &quot;Program Module Functionality&quot;)">
                  </a> <!-- runScenario("Creating user with different values from Test data", "Program Module Functionality") -->
                  <span class="method-name">runScenario</span>
                  <span class="parameters">("Creating user with different values from Test data","Program Module Functionality")</span>
                  <div class="stack-trace">io.cucumber.testng.UndefinedStepException: The step &apos;The Admin sends HTTPS POST request for valid data scenarios as input &quot;program&quot; and &quot;TC_01_user&quot; for Program&apos; and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When(&quot;The Admin sends HTTPS POST request for valid data scenarios as input {string} and {string} for Program&quot;)
public void the_admin_sends_https_post_request_for_valid_data_scenarios_as_input_and_for_program(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&quot;The Admin get valid data response code and message as {string} and {string} for Program&quot;)
public void the_admin_get_valid_data_response_code_and_message_as_and_for_program(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
	at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:136)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
	at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:132)
	at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.testng.TestRunner.privateRun(TestRunner.java:741)
	at org.testng.TestRunner.run(TestRunner.java:616)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
	at org.testng.SuiteRunner.run(SuiteRunner.java:312)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
	at org.testng.TestNG.runSuites(TestNG.java:1112)
	at org.testng.TestNG.run(TestNG.java:1079)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)

</div> <!-- stack-trace -->
                  <em>
(Runs Cucumber Scenarios)                  </em>
                </div> <!-- method-content -->
              </div> <!-- method -->
            </div> <!-- main-panel-content rounded-window-bottom -->
          </div> <!-- suite-Default_suite-class-failed -->
          <div class="suite-Default_suite-class-passed">
            <div class="main-panel-header rounded-window-top">
              <img src="passed.png"/>
              <span class="class-name">testRunner.TestRunner</span>
            </div> <!-- main-panel-header rounded-window-top -->
            <div class="main-panel-content rounded-window-bottom">
              <div class="method">
                <div class="method-content">
                  <a name="runScenario(&quot;Login functionality with different values from Tese data&quot;, &quot;Login/Logout Functionality&quot;)">
                  </a> <!-- runScenario("Login functionality with different values from Tese data", "Login/Logout Functionality") -->
                  <span class="method-name">runScenario</span>
                  <span class="parameters">("Login functionality with different values from Tese data","Login/Logout Functionality")</span>
                  <em>
(Runs Cucumber Scenarios)                  </em>
                </div> <!-- method-content -->
              </div> <!-- method -->
              <div class="method">
                <div class="method-content">
                  <a name="runScenario(&quot;Login functionality with different values from Tese data&quot;, &quot;Login/Logout Functionality&quot;)">
                  </a> <!-- runScenario("Login functionality with different values from Tese data", "Login/Logout Functionality") -->
                  <span class="method-name">runScenario</span>
                  <span class="parameters">("Login functionality with different values from Tese data","Login/Logout Functionality")</span>
                  <em>
(Runs Cucumber Scenarios)                  </em>
                </div> <!-- method-content -->
              </div> <!-- method -->
              <div class="method">
                <div class="method-content">
                  <a name="runScenario(&quot;Login functionality with different values from Tese data&quot;, &quot;Login/Logout Functionality&quot;)">
                  </a> <!-- runScenario("Login functionality with different values from Tese data", "Login/Logout Functionality") -->
                  <span class="method-name">runScenario</span>
                  <span class="parameters">("Login functionality with different values from Tese data","Login/Logout Functionality")</span>
                  <em>
(Runs Cucumber Scenarios)                  </em>
                </div> <!-- method-content -->
              </div> <!-- method -->
            </div> <!-- main-panel-content rounded-window-bottom -->
          </div> <!-- suite-Default_suite-class-passed -->
        </div> <!-- panel Default_suite -->
        <div panel-name="test-xml-Default_suite" class="panel">
          <div class="main-panel-header rounded-window-top">
            <span class="header-content">C:\Users\ems11\AppData\Local\Temp\testng-eclipse--1057224637\testng-customsuite.xml</span>
          </div> <!-- main-panel-header rounded-window-top -->
          <div class="main-panel-content rounded-window-bottom">
            <pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!DOCTYPE suite SYSTEM &quot;https://testng.org/testng-1.0.dtd&quot;&gt;
&lt;suite name=&quot;Default suite&quot; guice-stage=&quot;DEVELOPMENT&quot;&gt;
  &lt;test thread-count=&quot;5&quot; name=&quot;Default test&quot; verbose=&quot;2&quot;&gt;
    &lt;classes&gt;
      &lt;class name=&quot;testRunner.TestRunner&quot;/&gt;
    &lt;/classes&gt;
  &lt;/test&gt; &lt;!-- Default test --&gt;
&lt;/suite&gt; &lt;!-- Default suite --&gt;
            </pre>
          </div> <!-- main-panel-content rounded-window-bottom -->
        </div> <!-- panel -->
        <div panel-name="testlist-Default_suite" class="panel">
          <div class="main-panel-header rounded-window-top">
            <span class="header-content">Tests for Default suite</span>
          </div> <!-- main-panel-header rounded-window-top -->
          <div class="main-panel-content rounded-window-bottom">
            <ul>
              <li>
                <span class="test-name">Default test (1 class)</span>
              </li>
            </ul>
          </div> <!-- main-panel-content rounded-window-bottom -->
        </div> <!-- panel -->
        <div panel-name="group-Default_suite" class="panel">
          <div class="main-panel-header rounded-window-top">
            <span class="header-content">Groups for Default suite</span>
          </div> <!-- main-panel-header rounded-window-top -->
          <div class="main-panel-content rounded-window-bottom">
            <div class="test-group">
              <span class="test-group-name">cucumber</span>
              <br/>
              <div class="method-in-group">
                <span class="method-in-group-name">runScenario</span>
                <br/>
              </div> <!-- method-in-group -->
            </div> <!-- test-group -->
          </div> <!-- main-panel-content rounded-window-bottom -->
        </div> <!-- panel -->
        <div panel-name="times-Default_suite" class="panel">
          <div class="main-panel-header rounded-window-top">
            <span class="header-content">Times for Default suite</span>
          </div> <!-- main-panel-header rounded-window-top -->
          <div class="main-panel-content rounded-window-bottom">
            <div class="times-div">
              <script type="text/javascript">
suiteTableInitFunctions.push('tableData_Default_suite');
function tableData_Default_suite() {
var data = new google.visualization.DataTable();
data.addColumn('number', 'Number');
data.addColumn('string', 'Method');
data.addColumn('string', 'Class');
data.addColumn('number', 'Time (ms)');
data.addRows(6);
data.setCell(0, 0, 0)
data.setCell(0, 1, 'runScenario')
data.setCell(0, 2, 'testRunner.TestRunner')
data.setCell(0, 3, 9430);
data.setCell(1, 0, 1)
data.setCell(1, 1, 'runScenario')
data.setCell(1, 2, 'testRunner.TestRunner')
data.setCell(1, 3, 528);
data.setCell(2, 0, 2)
data.setCell(2, 1, 'runScenario')
data.setCell(2, 2, 'testRunner.TestRunner')
data.setCell(2, 3, 450);
data.setCell(3, 0, 3)
data.setCell(3, 1, 'runScenario')
data.setCell(3, 2, 'testRunner.TestRunner')
data.setCell(3, 3, 448);
data.setCell(4, 0, 4)
data.setCell(4, 1, 'runScenario')
data.setCell(4, 2, 'testRunner.TestRunner')
data.setCell(4, 3, 108);
data.setCell(5, 0, 5)
data.setCell(5, 1, 'runScenario')
data.setCell(5, 2, 'testRunner.TestRunner')
data.setCell(5, 3, 48);
window.suiteTableData['Default_suite']= { tableData: data, tableDiv: 'times-div-Default_suite'}
return data;
}
              </script>
              <span class="suite-total-time">Total running time: 11 seconds</span>
              <div id="times-div-Default_suite">
              </div> <!-- times-div-Default_suite -->
            </div> <!-- times-div -->
          </div> <!-- main-panel-content rounded-window-bottom -->
        </div> <!-- panel -->
        <div panel-name="reporter-Default_suite" class="panel">
          <div class="main-panel-header rounded-window-top">
            <span class="header-content">Reporter output for Default suite</span>
          </div> <!-- main-panel-header rounded-window-top -->
          <div class="main-panel-content rounded-window-bottom">
          </div> <!-- main-panel-content rounded-window-bottom -->
        </div> <!-- panel -->
        <div panel-name="ignored-methods-Default_suite" class="panel">
          <div class="main-panel-header rounded-window-top">
            <span class="header-content">0 ignored methods</span>
          </div> <!-- main-panel-header rounded-window-top -->
          <div class="main-panel-content rounded-window-bottom">
          </div> <!-- main-panel-content rounded-window-bottom -->
        </div> <!-- panel -->
        <div panel-name="chronological-Default_suite" class="panel">
          <div class="main-panel-header rounded-window-top">
            <span class="header-content">Methods in chronological order</span>
          </div> <!-- main-panel-header rounded-window-top -->
          <div class="main-panel-content rounded-window-bottom">
            <div class="chronological-class">
              <div class="chronological-class-name">testRunner.TestRunner</div> <!-- chronological-class-name -->
              <div class="configuration-class before">
                <span class="method-name">setUpClass(org.testng.TestRunner@348bd063)</span>
                <span class="method-start">0 ms</span>
              </div> <!-- configuration-class before -->
              <div class="test-method">
                <img src="failed.png">
                </img>
                <span class="method-name">runScenario("Login functionality with different values from Tese data", "Login/Logout Functionality")</span>
                <span class="method-start">1697 ms</span>
              </div> <!-- test-method -->
              <div class="test-method">
                <span class="method-name">runScenario("Login functionality with different values from Tese data", "Login/Logout Functionality")</span>
                <span class="method-start">11147 ms</span>
              </div> <!-- test-method -->
              <div class="test-method">
                <span class="method-name">runScenario("Login functionality with different values from Tese data", "Login/Logout Functionality")</span>
                <span class="method-start">11601 ms</span>
              </div> <!-- test-method -->
              <div class="test-method">
                <span class="method-name">runScenario("Login functionality with different values from Tese data", "Login/Logout Functionality")</span>
                <span class="method-start">12051 ms</span>
              </div> <!-- test-method -->
              <div class="test-method">
                <img src="failed.png">
                </img>
                <span class="method-name">runScenario("Creating user with different values from Test data", "Program Module Functionality")</span>
                <span class="method-start">12581 ms</span>
              </div> <!-- test-method -->
              <div class="test-method">
                <img src="failed.png">
                </img>
                <span class="method-name">runScenario("Creating Class with different values from Test data", "Class Module Functionality")</span>
                <span class="method-start">12694 ms</span>
              </div> <!-- test-method -->
              <div class="configuration-class after">
                <span class="method-name">tearDownClass</span>
                <span class="method-start">12750 ms</span>
              </div> <!-- configuration-class after -->
          </div> <!-- main-panel-content rounded-window-bottom -->
        </div> <!-- panel -->
      </div> <!-- main-panel-root -->
    </div> <!-- wrapper -->
  </body>
<script type="text/javascript" src="testng-reports2.js"></script>
</html>
